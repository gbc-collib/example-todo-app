{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/core/core.module.ts","./src/core/ticket-service/ticket.service.ts","./src/features/todo/create-ticket-modal/create-ticket-modal.component.ts","./src/features/todo/create-ticket-modal/create-ticket-modal.component.html","./src/features/todo/jira-board/jira-board.component.ts","./src/features/todo/jira-board/jira-board.component.html","./src/features/todo/todo.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { JiraBoardComponent } from 'src/features/todo/jira-board/jira-board.component';\n\nconst routes: Routes = [{ path: '', component: JiraBoardComponent }];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'todo';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CoreModule } from 'src/core/core.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoModule } from 'src/features/todo/todo.module';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        CoreModule,\n        TodoModule,\n    ],\n    providers: [\n    provideAnimationsAsync()\n  ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\n\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { TicketService } from \"./ticket-service/ticket.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n    ],\n    providers: [\n        TicketService\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\nexport type statusType = \"Open\" | \"In Progress\" | \"Resolved\";\n\n\nexport interface Ticket {\n    id: number;\n\n    title: string;\n\n    description: string;\n\n    status: statusType;\n\n    dueDate: Date;\n\n    createDate: Date;\n\n    user: string;\n\n    tags: string[];\n\n}\n\n//Type for user submitting Ticket, excludes auto generated columns of DB\nexport interface CreateTicket {\n    title: string;\n    description: string;\n    status: statusType;\n    dueDate: Date;\n    user: string;\n    tags: string[];\n}\n\nexport type Tickets = Ticket[];\n\n@Injectable({\n    providedIn: 'root'\n})\n\n\n\nexport class TicketService {\n\n    constructor(private http: HttpClient) { }\n\n    getAllTickets(): Observable<Tickets> {\n        return this.http.get<Tickets>('api/tickets');\n    }\n\n    getTicket(id: string): Observable<Ticket> {\n        return this.http.get<Ticket>(`api/tickets/${id}`);\n    }\n    createTicket(ticket: CreateTicket) {\n        console.log(ticket);\n        return this.http.post('api/tickets/', ticket);\n    }\n\n    updateTicket(ticket: Ticket, id: number) {\n        return this.http.put(`api/tickets/${id}`, ticket);\n    }\n}\n","import { Inject, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Ticket, TicketService } from 'src/core/ticket-service/ticket.service';\n\ninterface DialogData {\n    ticket: Ticket\n}\n@Component({\n    selector: 'app-create-ticket-modal',\n    templateUrl: './create-ticket-modal.component.html',\n    styleUrls: ['./create-ticket-modal.component.scss']\n})\n\nexport class CreateTicketModalComponent implements OnInit {\n    public submitted: boolean = false;\n    public loading: boolean = true;\n    public editing: boolean = false;\n    public ticketCreation!: FormGroup;\n\n    constructor(private fb: FormBuilder, private ticketService: TicketService, public dialogRef: MatDialogRef<CreateTicketModalComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData,) { }\n\n    ngOnInit(): void {\n        this.ticketCreation = this.fb.group({\n            title: ['', Validators.required],\n            description: [''],\n            dueDate: [new Date(), Validators.required],\n            status: ['Open', Validators.required],\n            tags: ['']\n        });\n        if (this.data != null && this.data.ticket != null) {\n            const ticket = this.data.ticket!;\n            let tags = ticket.tags.join(',');\n            //let dueDate = new Date.parse(ticket.dueDate);\n            this.editing = true;\n            this.ticketCreation.controls['title'].setValue(ticket.title);\n            this.ticketCreation.controls['description'].setValue(ticket.description);\n            this.ticketCreation.controls['dueDate'].setValue(ticket.dueDate);\n            this.ticketCreation.controls['tags'].setValue(tags);\n            this.ticketCreation.controls['status'].setValue(ticket.status);\n        }\n\n        this.loading = false;\n    }\n\n\n    public submitForm() {\n        this.submitted = true;\n        if (this.ticketCreation.invalid) return;\n        let requestData = this.ticketCreation.value\n        //For now I'm only user TODO: Actual user pool\n        requestData.user = 'Collin';\n        console.log(requestData);\n        let tagList = requestData.tags.split(',');\n        requestData.tags = tagList;\n        this.loading = true;\n        let req: any;\n        if (!this.editing)\n            req = this.ticketService.createTicket(requestData)\n        else\n            req = this.ticketService.updateTicket(requestData, this.data.ticket.id);\n        req\n            .subscribe({\n                'next': () => {\n                    this.loading = false;\n                    this.dialogRef.close();\n                },\n                'error': (err: any) => {\n                    this.loading = false;\n                    console.log(err);\n                }\n            });\n    }\n\n}\n","<mat-dialog-content>\n    <h2 mat-dialog-title class=\"text-center text-2xl pb-1\">Create new ticket</h2>\n    <form class=\"grid grid-cols-3 gap-4\" [formGroup]=\"ticketCreation\">\n        <div class=\"ms-10 col\">\n            <label for=\"title\">Title:</label>\n        </div>\n        <input type=\"text\" formControlName=\"title\" />\n        <br />\n        <div class=\"ms-10 col\">\n            <label for=\"Description\">Description:</label>\n        </div>\n        <textarea formControlName=\"description\"> </textarea>\n        <br />\n        <div class=\"ms-10 col\">\n            <label for=\"status\">Status:</label>\n        </div>\n        <select formControlName=\"status\">\n            <option value=\"Open\">Todo</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Resolved\">Finished</option>\n        </select>\n        <br />\n        <div class=\"ms-10 col\">\n            <label for=\"dueDate\">Due Date:</label>\n        </div>\n        <input formControlName=\"dueDate\" type=\"date\" />\n        <br />\n        <div class=\"ms-10 col\">\n            <label for=\"tags\">Tags:</label>\n        </div>\n        <input formControlName=\"tags\" type=\"text\" />\n        <br />\n        <div class=\"col-span-3 text-center\">\n            <button class=\"submit-btn\" (click)=\"submitForm()\">Create</button>\n        </div>\n    </form>\n</mat-dialog-content>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { TicketService, Tickets, Ticket, statusType } from \"src/core/ticket-service/ticket.service\";\nimport { AsyncPipe } from \"@angular/common\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { CreateTicketModalComponent } from \"../create-ticket-modal/create-ticket-modal.component\";\n@Component({ templateUrl: './jira-board.component.html' })\nexport class JiraBoardComponent implements OnInit {\n    public loading: boolean = true;\n    public ticketArray$!: Observable<Tickets>;\n    constructor(private tickets: TicketService, private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n        this.ticketArray$ = this.tickets.getAllTickets();\n        /*\n           .subscribe({\n               'next': (data: Tickets) => {\n                   this.ticketArray = data;\n                   this.loading = false;\n               },\n               'error': (error) => {\n                   console.log(error);\n               }\n           });\n    */\n    }\n\n    addTicket(status: statusType): void {\n        console.log(\"Adding new \" + status);\n        this.dialog.open(CreateTicketModalComponent);\n    }\n\n    openEditModal(ticket: Ticket) {\n        this.dialog.open(CreateTicketModalComponent, { data: { ticket: ticket } })\n    }\n\n\n}\n","<h1> Tickets </h1>\n<div class=\"grid grid-cols-3 gap-4\">\n    <section class=\"col bg-gray-100 border-gray-300\">\n        <h2>TODO</h2>\n        @for (ticket of ticketArray$ | async; track $index;){\n        <div *ngIf=\"ticket.status === 'Open'\" class=\"bg-gray-200 mb-4 mx-2 p-2\">\n            <h3>{{ ticket.title }}</h3>\n            <button (click)=\"openEditModal(ticket)\">Edit</button>\n        </div>\n        }\n        <button (click)=\"addTicket('Open')\">Add new Item</button>\n    </section>\n    <section class=\"col bg-gray-100 border-gray-300\">\n        <h2>In Progress</h2>\n        @for (ticket of ticketArray$ | async; track $index;){\n        <div *ngIf=\"ticket.status === 'In Progress'\" class=\"bg-gray-200 mb-4 mx-2 p-2\">\n            <h3>{{ ticket.title }}</h3>\n        </div>\n        }\n        <button (click)=\"addTicket('In Progress')\">Add new Item</button>\n    </section>\n    <section class=\"col bg-gray-100 border-gray-300\">\n        <h2>Finished</h2>\n        @for (ticket of ticketArray$ | async; track $index;){\n        <div *ngIf=\"ticket.status === 'Resolved'\" class=\"bg-gray-200 mb-4 mx-2 p-2\">\n            <h3>{{ ticket.title }}</h3>\n        </div>\n        }\n        <button (click)=\"addTicket('Resolved')\">Add new Item</button>\n    </section>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { JiraBoardComponent } from './jira-board/jira-board.component';\nimport { CreateTicketModalComponent } from './create-ticket-modal/create-ticket-modal.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n\n@NgModule({\n    declarations: [JiraBoardComponent, CreateTicketModalComponent],\n    imports: [\n        CommonModule,\n        AsyncPipe,\n        ReactiveFormsModule,\n        MatDialogModule,\n    ],\n    exports: [\n        JiraBoardComponent\n    ]\n})\nexport class TodoModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","JiraBoardComponent","routes","path","component","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","CoreModule","TodoModule","provideAnimationsAsync","AppModule","bootstrap","declarations","TicketService","HttpClientModule","http","getAllTickets","get","getTicket","id","createTicket","ticket","console","log","post","updateTicket","put","ɵɵinject","HttpClient","factory","ɵfac","providedIn","Validators","MAT_DIALOG_DATA","CreateTicketModalComponent","fb","ticketService","dialogRef","data","submitted","loading","editing","ngOnInit","ticketCreation","group","required","description","dueDate","Date","status","tags","join","controls","setValue","submitForm","invalid","requestData","value","user","tagList","split","req","subscribe","next","close","err","ɵɵdirectiveInject","FormBuilder","i2","i3","MatDialogRef","consts","CreateTicketModalComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateTicketModalComponent_Template_button_click_37_listener","ɵɵadvance","ɵɵproperty","JiraBoardComponent_For_7_div_0_Template_button_click_3_listener","ɵɵrestoreView","_r1","ticket_r2","ɵɵnextContext","$implicit","ctx_r2","ɵɵresetView","openEditModal","ɵɵtextInterpolate","ɵɵtemplate","JiraBoardComponent_For_7_div_0_Template","ticket_r4","JiraBoardComponent_For_15_div_0_Template","ticket_r5","JiraBoardComponent_For_23_div_0_Template","tickets","dialog","ticketArray$","addTicket","open","MatDialog","JiraBoardComponent_Template","ɵɵrepeaterCreate","JiraBoardComponent_For_7_Template","ɵɵrepeaterTrackByIndex","JiraBoardComponent_Template_button_click_9_listener","JiraBoardComponent_For_15_Template","JiraBoardComponent_Template_button_click_17_listener","JiraBoardComponent_For_23_Template","JiraBoardComponent_Template_button_click_25_listener","ɵɵrepeater","ɵɵpipeBind1","AsyncPipe","CommonModule","ReactiveFormsModule","MatDialogModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}